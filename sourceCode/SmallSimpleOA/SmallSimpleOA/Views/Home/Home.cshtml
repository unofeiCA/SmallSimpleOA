@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model SmallSimpleOA.ViewModels.HomeHomeViewModel;
<div class="container row ">
    <div class="col-6 container">
        <h3>Events</h3>
        <div class="list-group">
            @foreach (var e in Model.EventList)
            {
                <a href="@Url.Action("Detail", "AskForLeave", new { id = e.Id})" class="list-group-item list-group-item-action">
                    <span class="d-inline-block text-truncate" style="max-width:35%;">@e.Applicant.FirstName&nbsp;@e.Applicant.LastName</span>&nbsp;&nbsp;
                    <span class="d-inline-block text-truncate" style="max-width:35%;">@e.Reason &nbsp;</span>
                    <span class="d-inline-block float-right">@e.StartTime</span>
                </a>
            }

        </div>
        <br />
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Home", "Home", new { ep = Model.EventCurrentPage <= 1 ? 1 : Model.EventCurrentPage - 1  })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>

                @for (int i = 0; i < Model.EventPageitems.Count(); i ++ )
                {
                    if (Model.EventPageitems[i] == Model.EventCurrentPage)
                    {
                        <li class="page-item active"><a class="page-link" href="@Url.Action("Home", "Home", new { ep = Model.EventPageitems[i]})">@Model.EventPageitems[i]</a></li>
                    }
                    else
                    {
                        <li class="page-item"><a class="page-link" href="@Url.Action("Home", "Home", new { ep = Model.EventPageitems[i]})">@Model.EventPageitems[i]</a></li>
                    }
                }
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Home", "Home", new { ep = Model.EventCurrentPage >= Model.EventPages ? Model.EventPages : Model.EventCurrentPage + 1})" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    <div class="col-6 container">
        <h3>To-do List</h3>
        <div class="list-group">
            @foreach (var e in Model.TodoTaskList)
            {
                <a href="@Url.Action("Detail", "TodoTask", new { id = e.Id})" class="list-group-item list-group-item-action">@e.Title &nbsp;&nbsp; @e.DeadLine</a>
            }
        </div>
        <br />
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Home", "Home", new { tp = Model.TodoCurrentPage <= 1 ? 1 : Model.TodoCurrentPage - 1  })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>

                @for (int i = 0; i < Model.TodoPageitems.Count(); i ++ )
                {
                    if (Model.TodoPageitems[i] == Model.TodoCurrentPage)
                    {
                        <li class="page-item active"><a class="page-link" href="@Url.Action("Home", "Home", new { tp = Model.TodoPageitems[i]})">@Model.TodoPageitems[i]</a></li>
                    }
                    else
                    {
                        <li class="page-item"><a class="page-link" href="@Url.Action("Home", "Home", new { tp = Model.TodoPageitems[i]})">@Model.TodoPageitems[i]</a></li>
                    }
                }
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Home", "Home", new { ep = Model.TodoCurrentPage >= Model.TodoPages ? Model.TodoPages : Model.TodoCurrentPage + 1})" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
        </nav>

    </div>

</div>

@if (@Model.NeedClockIn)
{
    <div id="signPop" class="card text-white bg-info mb-3" style="max-width: 18rem; z-index:500;">
        <div class="card-header">You Have NOT Clocked In Today! Clock In Now?</div>
        <div class="card-body row">
            <div class="col-auto">
            </div>
            <div class="col-auto button-light">
                <a class="text-white" onclick="cancelClock();" href="#">No thanks</a>
            </div>
            <div class="col-2">
            </div>
            <div class="col-auto button-light">
                <a class="text-white" onclick="clockIn();" href="#">Sure</a>
            </div>
            <div class="col-auto">
            </div>
        </div>
    </div>

    @section Scripts{
        <script>

            $("#signPop").position({
                my: "right top",
                at: "right-15 bottom+15",
                of: "#messagePopBase"
            });

            function clockIn()
            {
                $.ajax({
                    type: "POST",
                    data: {actionType : "1", by : "ajax"},
                    url: "@Url.Action("DoClock", "Attendance")",
                    dataType: 'text',
                    success: function (response) {
                        if (response != "0")
                        {
                            alert(response);
                        }
                        else
                        {
                            
                            $("#signPop").fadeOut({'complete' :
                                function()
                                {
                                    $("#signPop").children(".card-body").remove();
                                    $("#signPop").children(".card-header").text("Clock in success!");
                                    $("#signPop").fadeIn({'complete' :
                                        function()
                                        {

                                           $("#signPop").delay(1000).fadeOut();
                                        }
                                    });
                                }
                            });
                        }
                    },
                    error: function (response) {
                        alert("Some unknown error occured, please try it again later.");
                    }

                });
            }

            function cancelClock()
            {
                $("#signPop").fadeOut();
            }
        </script>
    }
}
