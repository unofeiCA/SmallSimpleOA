@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model SmallSimpleOA.ViewModels.TodoListViewModel
<div class="row container">
    <div class="col-11">
        <h3 class="float-left">Todo Task</h3>
    </div>
    <div class="col-1 d-flex  ">
        <button type="button" class="btn btn-success btn-sm align-self-center" onclick="javascript:location.href='@Url.Action("New", "Todo")'">NEW</button>
    </div>
</div>
<div class="container row ">
    <div class="col-12 container">

        @if (Model.TodoList.Count > 0)
        {
            <div class="list-group">
                @foreach (var todo in Model.TodoList)
                {
                    var color = "";

                    @if (todo.Status == (int)TodoTaskStatus.Done)
                    {
                        color = "bg-success text-white";
                    }
                    else if (todo.Status == (int)TodoTaskStatus.Faraway)
                    {
                        color = "bg-light text-black";
                    }
                    else if (todo.Status == (int)TodoTaskStatus.Approching)
                    {
                        color = "bg-info text-white";
                    }
                    else if (todo.Status == (int)TodoTaskStatus.DueSoon)
                    {
                        color = "bg-warning text-white";
                    }
                    else if (todo.Status == (int)TodoTaskStatus.Due)
                    {
                        color = "bg-danger text-white";
                    }
                    <a href="@Url.Action("Detail", "Todo", new { id = todo.Id })" class="list-group-item list-group-item-action @color">
                        <span class="d-inline-block text-truncate" style="max-width: 75%;">@todo.Title</span>&nbsp;&nbsp;

                        <span class="d-inline-block float-right">@todo.DeadLine&nbsp;&nbsp;</span>
                    </a>
                }
            </div>

            @if (Model.Pages > 1)
            {
            <br />
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("List", "Todo", new { p = Model.CurrentPage <= 1 ? 1 : Model.CurrentPage - 1 })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    @for (int i = 0; i < Model.PageItems.Count(); i++)
                    {
                        if (Model.PageItems[i] == Model.CurrentPage)
                        {
                            <li class="page-item active"><a class="page-link" href="@Url.Action("List", "Todo", new { p = Model.PageItems[i] })">@Model.PageItems[i]</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("List", "Todo", new { p = Model.PageItems[i] })">@Model.PageItems[i]</a></li>
                        }
                    }
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("List", "Todo", new { p = Model.CurrentPage >= Model.Pages ? Model.Pages : Model.CurrentPage + 1 })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>
            }
        }
        else
        {
            <h4 style="color:lightgrey;">You don't have any data in this area yet. </h4>
        }

    </div>
</div>
